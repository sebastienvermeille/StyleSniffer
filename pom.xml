<!--

    The MIT License
    Copyright Â© 2024 Sebastien Vermeille

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>dev.cookiecode</groupId>
  <artifactId>stylesniffer-parent</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>StyleSniffer</name>
  <description>
    StyleSniffer is a Java library crafted to simplify the detection and analysis of case styles
    in strings.

    Whether you're dealing with camelCase, snake_case, PascalCase, or any other naming convention,
    StyleSniffer provides a straightforward and efficient way to understand and manage these styles.
  </description>
  <url>https://stylesniffer.cookiecode.dev/</url>
  <scm>
    <connection>scm:git:git@github.com:sebastienvermeille/StyleSniffer.git</connection>
    <developerConnection>scm:git:git@github.com:sebastienvermeille/StyleSniffer.git</developerConnection>
    <url>https://github.com/sebastienvermeille/stylesniffer</url>
  </scm>
  <licenses>
    <license>
      <name>MIT License</name>
      <url>LICENSE</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>
  <inceptionYear>2024</inceptionYear>
  <organization>
    <name>CookieCode.dev</name>
    <url>https://cookiecode.dev</url>
  </organization>
  <contributors>
    <contributor>
      <name>sebastienvermeille</name>
      <email>sebastien.vermeille@gmail.com</email>
      <roles>
        <role>maintainer</role>
      </roles>
    </contributor>
  </contributors>
  <developers>
    <developer>
      <id>sebastienvermeille</id>
      <name>Sebastien Vermeille</name>
      <email>sebastien.vermeille@gmail.com</email>
      <organization>CookieCode.dev</organization>
      <organizationUrl>http://cookiecode.dev/</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <modules>
    <module>stylesniffer-api</module>
    <module>stylesniffer-impl</module>
    <module>stylesniffer-annotation-processor</module>
    <module>stylesniffer-testkit</module>
    <module>stylesniffer-report-aggregate</module>
  </modules>

  <properties>
    <!-- Java and Encoding -->
    <java.sdk.version>21</java.sdk.version>
    <source.encoding>UTF-8</source.encoding>
    <stylesniffer.root>${basedir}</stylesniffer.root>

    <!-- Sonar Configuration -->
    <sonar.organization>sebastienvermeille</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.language>java</sonar.language>
    <project.sonar.root.projectKey>sebastienvermeille_stylesniffer</project.sonar.root.projectKey>
    <sonar.projectKey>${project.sonar.root.projectKey}</sonar.projectKey>
    <sonar.sources>src/main/java</sonar.sources>
    <sonar.tests>src/test/java</sonar.tests>
    <sonar.links.homepage>https://stylesniffer.cookiecode.dev/</sonar.links.homepage>
    <sonar.links.scm>https://github.com/sebastienvermeille/StyleSniffer</sonar.links.scm>
    <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/report-aggregate/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>

    <!-- Dependencies Versions -->
    <flogger.version>0.8</flogger.version>
    <google-auto-service.version>1.1.1</google-auto-service.version>
    <logback.version>1.5.8</logback.version>
    <slf4j.version>2.0.16</slf4j.version>
    <thymeleaf.version>3.1.2.RELEASE</thymeleaf.version>
    <jakarta.annotation.version>3.0.0</jakarta.annotation.version>

    <!-- Test Dependencies Versions -->
    <assertj-core.version>3.26.3</assertj-core.version>
    <junit.version>5.11.1</junit.version>
    <mockito.version>5.14.2</mockito.version>

    <!-- Code Generation Dependencies -->
    <lombok.version>1.18.34</lombok.version>

    <!-- Maven Plugins Versions -->
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>3.5.0</maven-surefire-plugin.version>
    <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
    <maven-javadoc-plugin.version>3.10.1</maven-javadoc-plugin.version>
    <maven-jacoco-plugin.version>0.8.12</maven-jacoco-plugin.version>
    <maven-fmt-plugin.version>2.24</maven-fmt-plugin.version>
    <maven-license-plugin.version>4.6</maven-license-plugin.version>
    <maven-ayoy-license-verifier.version>1.2.0</maven-ayoy-license-verifier.version>
    <maven-sonar-plugin.version>4.0.0.4121</maven-sonar-plugin.version>
    <maven-gpg-plugin.version>3.2.7</maven-gpg-plugin.version>
    <maven-staging-plugin.version>1.7.0</maven-staging-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>jakarta.annotation</groupId>
        <artifactId>jakarta.annotation-api</artifactId>
        <version>${jakarta.annotation.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.thymeleaf</groupId>
        <artifactId>thymeleaf</artifactId>
        <version>${thymeleaf.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.google.auto.service</groupId>
        <artifactId>auto-service</artifactId>
        <version>${google-auto-service.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.google.flogger</groupId>
        <artifactId>flogger</artifactId>
        <version>${flogger.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.google.flogger</groupId>
        <artifactId>flogger-slf4j-backend</artifactId>
        <version>${flogger.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj-core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <!-- This is required to make sure the plugin does not stop asking for -->
                  <!-- user input on the passphrase -->
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <release>${java.sdk.version}</release>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${maven-staging-plugin.version}</version>
          <extensions>true</extensions>
          <configuration>
            <serverId>ossrh</serverId>
            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
            <autoReleaseAfterClose>true</autoReleaseAfterClose>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <additionalOptions>-Xdoclint:none</additionalOptions>
            <failOnError>false</failOnError>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${maven-jacoco-plugin.version}</version>
          <executions>
            <execution>
              <id>agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-report</id>
              <goals>
                <goal>report</goal>
              </goals>
              <phase>test</phase>
            </execution>
            <execution>
              <id>check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <rules>
                  <rule>
                    <element>CLASS</element>
                    <limits>
                      <limit>
                        <counter>LINE</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>0.80</minimum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.spotify.fmt</groupId>
          <artifactId>fmt-maven-plugin</artifactId>
          <version>${maven-fmt-plugin.version}</version>
          <configuration>
            <filesNamePattern>.*\.java</filesNamePattern>
            <skip>false</skip>
            <skipSortingImports>false</skipSortingImports>
            <sourceDirectory>src/main/java</sourceDirectory>
            <style>google</style>
            <testSourceDirectory>src/test/java</testSourceDirectory>
            <verbose>false</verbose>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>format</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${maven-license-plugin.version}</version>
          <configuration>
            <licenseSets>
              <licenseSet>
                <excludes>
                  <exclude>**/*.md</exclude>
                  <exclude>.code/**</exclude>
                  <exclude>.github/**</exclude>
                  <exclude>.mvn/**</exclude>
                  <exclude>src/test/resources/**</exclude>
                  <exclude>src/main/resources/**</exclude>
                </excludes>
                <header>${stylesniffer.root}/.licenses/MIT.template.txt</header>
              </licenseSet>
            </licenseSets>
            <properties>
              <email>sebastien.vermeille@gmail.com</email>
              <mapping>
                <java>JAVAPKG_STYLE</java>
              </mapping>
              <owner>Sebastien Vermeille</owner>
              <year>2024</year>
            </properties>
          </configuration>
        </plugin>

        <plugin>
          <groupId>se.ayoy.maven-plugins</groupId>
          <artifactId>ayoy-license-verifier-maven-plugin</artifactId>
          <version>${maven-ayoy-license-verifier.version}</version>
          <configuration>
            <failOnForbidden>true</failOnForbidden>
            <failOnMissing>false</failOnMissing>
            <failOnUnknown>true</failOnUnknown>
            <licenseFile>${stylesniffer.root}/.licenses/licenses.xml</licenseFile>
            <requireAllValid>false</requireAllValid>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>verify</goal>
              </goals>
              <phase>compile</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${maven-sonar-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>se.ayoy.maven-plugins</groupId>
        <artifactId>ayoy-license-verifier-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>mavencentral</id>
      <name>Maven central</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
</project>
